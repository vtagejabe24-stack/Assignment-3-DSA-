#include <iostream>
#include <string>
using namespace std;

#define SIZE 100

class Stack {
    char arr[SIZE];
    int top;
public:
    Stack() {
        top = -1;
    }

    void push(char c) {
        if (top < SIZE - 1) {
            arr[++top] = c;
        }
    }

    char pop() {
        if (top >= 0) {
            return arr[top--];
        }
        return '\0';
    }

    bool isEmpty() {
        return (top == -1);
    }
};

bool isBalanced(string exp) {
    Stack s;

    for (int i = 0; i < exp.length(); i++) {
        char c = exp[i];

        // push opening brackets
        if (c == '(' || c == '{' || c == '[') {
            s.push(c);
        }
        // check closing brackets
        else if (c == ')' || c == '}' || c == ']') {
            if (s.isEmpty()) return false;

            char top = s.pop();
            if ((c == ')' && top != '(') ||
                (c == '}' && top != '{') ||
                (c == ']' && top != '[')) {
                return false;
            }
        }
    }
    return s.isEmpty();
}

int main() {
    string exp;
    cout << "Enter expression: ";
    cin >> exp;

    if (isBalanced(exp)) {
        cout << "Balanced\n";
    } else {
        cout << "Not Balanced\n";
    }

    return 0;
}
